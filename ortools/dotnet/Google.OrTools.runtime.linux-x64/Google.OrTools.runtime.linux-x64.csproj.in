<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <OutputType>Library</OutputType>
    <TargetFramework>netstandard2.0</TargetFramework>
    <RuntimeIdentifier>linux-x64</RuntimeIdentifier>
    <AssemblyName>Google.OrTools</AssemblyName>

    <!-- Nuget Properties-->
    <PackageId>Google.OrTools.runtime.linux-x64</PackageId>
    <Version>@PROJECT_VERSION@</Version>
    <Authors>Google LLC</Authors>
    <Description>.NET native wrapper for the Operations Research Tools project</Description>
    <Copyright>Copyright 2018 Google LLC</Copyright>
    <PackageLicenseUrl>https://github.com/google/or-tools/blob/master/LICENSE-2.0.txt</PackageLicenseUrl>
    <PackageProjectUrl>https://developers.google.com/optimization</PackageProjectUrl>
    <PackageTags>native;math;LinearSolver;ConstraintSolver;ConstraintProgramming</PackageTags>
    <PackageOutputPath>../../../packages</PackageOutputPath>
    <GeneratePackageOnBuild>false</GeneratePackageOnBuild>

    <AssemblyOriginatorKeyFile>../../../bin/or-tools.snk</AssemblyOriginatorKeyFile>
    <SignAssembly>true</SignAssembly>
    <PublicSign Condition="'$(OS)' != 'Windows_NT'">true</PublicSign>

    <!-- Build Properties -->
    <ProduceReferenceAssembly>true</ProduceReferenceAssembly>
    <UseSharedCompilation>false</UseSharedCompilation>
    <EnableDefaultItems>false</EnableDefaultItems>
    <BuildOutputTargetFolder>runtimes/$(RuntimeIdentifier)/lib</BuildOutputTargetFolder>
  </PropertyGroup>

  <ItemGroup>
    <Compile Include="../../gen/ortools/algorithms/*.cs">
      <Link>algorithms/%(Filename)%(Extension)</Link>
    </Compile>
    <Compile Include="../../algorithms/csharp/*.cs">
      <Link>algorithms/%(Filename)%(Extension)</Link>
    </Compile>

    <Compile Include="../../gen/ortools/graph/*.cs">
      <Link>graph/%(Filename)%(Extension)</Link>
    </Compile>
    <Compile Include="../../graph/csharp/*.cs">
      <Link>graph/%(Filename)%(Extension)</Link>
    </Compile>

    <Compile Include="../../gen/ortools/linear_solver/*.cs">
      <Link>linear_solver/%(Filename)%(Extension)</Link>
    </Compile>
    <Compile Include="../../linear_solver/csharp/*.cs">
      <Link>linear_solver/%(Filename)%(Extension)</Link>
    </Compile>

    <Compile Include="../../gen/ortools/constraint_solver/*.cs">
      <Link>constraint_solver/%(Filename)%(Extension)</Link>
    </Compile>
    <Compile Include="../../constraint_solver/csharp/*.cs">
      <Link>constraint_solver/%(Filename)%(Extension)</Link>
    </Compile>

    <Compile Include="../../gen/ortools/sat/*.cs">
      <Link>sat/%(Filename)%(Extension)</Link>
    </Compile>
    <Compile Include="../../sat/csharp/*.cs">
      <Link>sat/%(Filename)%(Extension)</Link>
    </Compile>

    <Compile Include="../../gen/ortools/util/*.cs">
      <Link>util/%(Filename)%(Extension)</Link>
    </Compile>
    <Compile Include="../../util/csharp/*.cs">
      <Link>util/%(Filename)%(Extension)</Link>
    </Compile>

    <!-- Native library must be in native directory... -->
    <Content Include="../../../dependencies/install/lib*/*.so*">
      <PackagePath>runtimes/linux-x64/native/%(Filename)%(Extension)</PackagePath>
      <Pack>true</Pack>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <Content Include="../../../lib/Google.OrTools.runtime.linux-x64.so; ../../../lib/libortools.so">
      <PackagePath>runtimes/linux-x64/native/%(Filename)%(Extension)</PackagePath>
      <Pack>true</Pack>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Google.Protobuf" Version="3.6.1" />
  </ItemGroup>
</Project>
